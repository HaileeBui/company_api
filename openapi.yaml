openapi: 3.0.3
info:
  title: Swagger Company - OpenAPI 3.0
  description: |-
    This is a sample company-api based on the OpenAPI 3.0 specification.  You can find out more about
  
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://localhost:8080
tags:
  - name: company
    description: Operations for company
paths:
  /company:
    post:
      tags:
        - company
      summary: Add a new company to the database
      description: Add a new company to the database
      operationId: createCompany
      requestBody:
        description: Create a new company in the database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Company'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'          
        '404':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    get:
      tags:
        - company
      summary: Get all company
      description: Returns all company
      operationId: getCompanies
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListOfCompany'          
    put:
      tags:
        - company
      summary: Update an existing company
      description: Update an existing company
      operationId: updateCompany
      requestBody:
        description: Update an existent company in database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatedCompany'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'          
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
  /company/{companyId}:
    get:
      tags:
        - company
      summary: Find company by ID
      description: Returns a single company
      operationId: getCompany
      parameters:
        - name: companyId
          in: path
          description: ID of company to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Company'          
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
    delete:
      tags:
        - company
      summary: Delete a company
      description: Delete company with id
      operationId: deleteCompany
      parameters:
        - name: companyId
          in: path
          description: ID of company to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '201':
          description: Successful operation
        '404':
          description: Company not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
components:
  schemas:
    ListOfCompany:
      type: array
      items: 
        type: object
        properties:
          id:
            type: integer
            format: int64
            example: 10
          name:
            type: string
            example: "Qvik"
          email:
            type: integer
            format: email
            example: "qvik@info.com"
            minLength: 0
          url:
            type: string
            example: "qvik.com"
            minLength: 0
          businessId:
            type: string
            example: "112345-6"
            minLength: 0
          address:
            type: string
            minLength: 0
          phoneNumber:
            type: string
      
    UpdatedCompany:
      type: object
      required: 
      - name
      - id
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: "Qvik"
    Company:
      type: object
      required: 
      - name
      - id
      properties:
        id:
          type: integer
          format: int64
          example: 10
        name:
          type: string
          example: "Qvik"
        email:
          type: integer
          format: email
          example: "qvik@info.com"
          minLength: 0
        url:
          type: string
          example: "qvik.com"
          minLength: 0
        businessId:
          type: string
          example: "112345-6"
          minLength: 0
        address:
          type: string
          minLength: 0
        phoneNumber:
          type: string
      xml:
        name: company
    ApiResponse:
      type: object
      properties:
        code:
          type: integer
          format: int32
          example: 404
        status:
          type: string
          example: "Bad request"
        message:
          type: string
      xml:
        name: '##default'
  requestBodies:
    Company:
      description: Company object that needs to be added to the database
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Company'
        application/xml:
          schema:
            $ref: '#/components/schemas/Company'